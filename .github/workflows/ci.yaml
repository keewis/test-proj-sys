name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}.${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          #- "ubuntu-latest"
          # building proj-sys on windows appears to not really be possible
          - "windows-latest"
          #- "macos-latest"
        python-version:
          #- "3.10"
          - "3.12"
          #- "3.13"

    env:
      FORCE_COLOR: 3

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: rust-tests
          environment-file: ci/requirements/environment-rust.yaml
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-rust-py${{ matrix.python-version }}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
          create-args: >-
            python=${{ matrix.python-version }}

      - name: Create rust cache
        uses: Swatinem/rust-cache@v2

      - name: Help finding installed libraries
        run: |
          pushd $CONDA_PREFIX
          export PKG_CONFIG_PATH="$(readlink -f lib/pkgconfig)"
          export LD_LIBRARY_PATH="$(readlink -f lib)"
          export CPATH="$(readlink -f include)"
          export PYO3_PYTHON="$(readlink -f bin/python)"
          popd

          if [[ -z "$CONDA_PREFIX" ]]; then
            echo "CONDA_PREFIX is unset!";
            exit 1
          fi

          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mkdir -p target/debug/deps
            ln -s "$CONDA_PREFIX/lib/libpython${{ matrix.python-version }}.dylib" target/debug/deps
            ls -l target/debug/deps
            ls -l $CONDA_PREFIX/lib
          fi

          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "CPATH=$CPATH" >> $GITHUB_ENV
          echo "PYO3_PYTHON=$PYO3_PYTHON" >> $GITHUB_ENV

      - name: Run pkg-config
        run: |
          export PKG_CONFIG_PATH="${{env.PKG_CONFIG_PATH}}"

          env | grep -i pkg
          micromamba list

          pkg-config --list-all
          ls -l $PKG_CONFIG_PATH

      - name: Run tests
        run: |
          export PKG_CONFIG_PATH="${{env.PKG_CONFIG_PATH}}"

          cargo build --tests --keep-going
          cargo test --no-fail-fast
